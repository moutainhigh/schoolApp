<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yuxin.wx.company.mapper.CompanyFunctionSetMapper">
	<resultMap type="com.yuxin.wx.model.company.CompanyFunctionSet" id="companyFunctionSetResultMap">
		<result property="id" column="id" />
		<result property="companyId" column="company_id" />
		<result property="functionCode" column="function_code" />
		<result property="functionName" column="function_name" />
		<result property="content" column="content" />
		<result property="status" column="status" />
		<result property="column1" column="column_1" />
		<result property="column2" column="column_2" />
	</resultMap>
	
	<sql id="table_columns">
		id,
		company_id,
		function_code,
		function_name,
		content,
		status,
		column_1,
		column_2
    </sql>
	<sql id="entity_properties">
		#{id},
		#{companyId},
		#{functionCode},
		#{functionName},
		#{content},
		#{status},
		#{column1},
		#{column2}
	</sql>
	<sql id="batch_entity_properties">
		#{item.id},
		#{item.companyId},
		#{item.functionCode},
		#{item.functionName},
		#{item.content},
		#{item.status},
		#{item.column1},
		#{item.column2}
	</sql>
	
	<!-- 适用于主键自增类型 -->
	<insert id="insert" parameterType="com.yuxin.wx.model.company.CompanyFunctionSet" useGeneratedKeys="true" keyProperty="id">
		insert into company_function_set( <include refid="table_columns" /> ) 
		values ( <include refid="entity_properties" /> )
	</insert>
	
	<!-- 批量添加 适用于主键自增类型  不支持返回主键-->
	<insert id="batchInsert" parameterType="java.util.List" useGeneratedKeys="true">
		insert into company_function_set( <include refid="table_columns" /> ) 
		values 
		<foreach item="item" collection="list" separator="," >
			( <include refid="entity_properties" /> )
		</foreach>
	</insert>
	<!--根据主键删除 -->
	<delete id="deleteById">
		delete from tbl_users
		where id = #{id}
	</delete>
	
	<!-- 根据ID批量删除 -->
	<delete id="deleteByIds">
		delete from company_function_set
		where id in
		<foreach item="item" collection="array" open="(" separator="," close=")">
			#{item}
		</foreach>
	</delete>
	
	<update id="update" parameterType="com.yuxin.wx.model.company.CompanyFunctionSet">
		update company_function_set 
		<trim prefix="set" suffixOverrides=",">
			<if test="companyId != null and companyId != ''">company_id = #{companyId},</if>
			<if test="functionCode != null and functionCode != ''">function_code = #{functionCode},</if>
			<if test="functionName != null and functionName != ''">function_name = #{functionName},</if>
			<if test="content != null and content != ''">content = #{content},</if>
			<if test="status != null and status != ''">status = #{status},</if>
			<if test="column1 != null and column1 != ''">column_1 = #{column1},</if>
			<if test="column2 != null and column2 != ''">column_2 = #{column2},</if>
		</trim>
		<where>id = #{id}</where>
	</update>
	
	<update id="updateByComIdAndCode" parameterType="com.yuxin.wx.model.company.CompanyFunctionSet">
		update company_function_set 
		<trim prefix="set" suffixOverrides=",">
			<if test="functionName != null and functionName != ''">function_name = #{functionName},</if>
			<if test="content != null and content != ''">content = #{content},</if>
			<if test="status != null and status != ''">status = #{status},</if>
			<if test="column1 != null and column1 != ''">column_1 = #{column1},</if>
			<if test="column2 != null and column2 != ''">column_2 = #{column2},</if>
			<if test="content != null and content != ''">content = #{content}</if>
		</trim>
		<where>company_id = #{companyId} and function_code = #{functionCode}</where>
	</update>
	
	<select id="findById" resultMap="companyFunctionSetResultMap" parameterType="String" >
		select <include refid="table_columns" />
		from company_function_set
		<include refid="page_where" />
	</select>
	
	<select id="findCompanyFunctionSet" resultMap="companyFunctionSetResultMap" parameterType="com.yuxin.wx.model.company.CompanyFunctionSet">
		select <include refid="table_columns" />
		from company_function_set
		where company_id = #{companyId} 
		<if test="functionCode != null and functionCode != ''">and function_code = #{functionCode}</if>
		<if test="status != null and status != ''">and status = #{status}</if>
	</select>
	
	<select id="queryAll" resultMap="companyFunctionSetResultMap">
		select <include refid="table_columns" /> 
		from company_function_set
	</select>
	
	<!-- 使用like用法：columnName like concat('%',#columnName#,'%') -->
	<sql id="page_where">
		<trim prefix="where" prefixOverrides="and | or ">
			<if test="companyId != null and companyId != ''">and company_id = #{companyId}</if>
			<if test="functionCode != null and functionCode != ''">and function_code = #{functionCode}</if>
			<if test="functionName != null and functionName != ''">and function_name = #{functionName}</if>
			<if test="content != null and content != ''">and content = #{content}</if>
			<if test="status != null and status != ''">and status = #{status}</if>
			<if test="column1 != null and column1 != ''">and column_1 = #{column1}</if>
			<if test="column2 != null and column2 != ''">and column_2 = #{column2}</if>
		</trim>
	</sql>
	
	<select id="page" resultMap="companyFunctionSetResultMap" parameterType="com.yuxin.wx.model.company.CompanyFunctionSet">
		select <include refid="table_columns" />
		from company_function_set
		<include refid="page_where" />
		limit #{firstIndex},#{pageSize}
	</select>
	
	<select id="pageCount" resultType="int" parameterType="com.yuxin.wx.model.company.CompanyFunctionSet">
		select count(id) from company_function_set
		<include refid="page_where" />
	</select>
	
	<!-- 其他自定义SQL -->
	<select id="findCompanyUseCourse" resultMap="companyFunctionSetResultMap" parameterType="com.yuxin.wx.model.company.CompanyFunctionSet">
		select <include refid="table_columns" />
		from company_function_set
		where company_id = #{companyId} 
		<if test="functionCode != null and functionCode != ''">and function_code = #{functionCode}</if>
		<if test="status != null and status != ''">and status = #{status}</if>
	</select>
	
	<select id="findCompanyFunctions" resultMap="companyFunctionSetResultMap" parameterType="com.yuxin.wx.model.company.CompanyFunctionSet">
		select <include refid="table_columns" />
		from company_function_set
		where company_id = #{companyId} 
		<if test="functionCode != null and functionCode != ''">and function_code = #{functionCode}</if>
		<if test="status != null">and status = #{status}</if>
	</select>
	<select id="findCompanyFunctionSetBySearch" resultMap="companyFunctionSetResultMap" parameterType="com.yuxin.wx.model.company.CompanyFunctionSet">
		select <include refid="table_columns" />
		from company_function_set
		<include refid="page_where" />
	</select>
	<select id="findHaveTeachSchedulePrivilege"  parameterType="map" resultType="int">
		select c.status  from  
		company_function_set c
		where   c.company_id=#{companyId}
		and    c.function_code=#{functionCode}
		limit 1
	</select>
	
	<select id="getCompanyFunctionSet" parameterType="com.yuxin.wx.model.company.CompanyFunctionSet" resultType="com.yuxin.wx.model.company.CompanyFunctionSet">
		select
			id,
			company_id as companyId,
			function_code as functionCode,
			function_name as functionName,
			content,
			status,
			column_1 as column1,
			column_2 as column2
		from company_function_set
		where company_id = #{companyId} 
		and function_code = #{functionCode} 
		and status = #{status}
	</select>
	
	
	<select id="queryProtocolFucntionSet" resultType="com.yuxin.wx.model.company.CompanyFunctionSet" parameterType="com.yuxin.wx.model.company.CompanyFunctionSet">
	 select * from company_function_set where company_id = #{companyId} and function_code = #{functionCode}
	</select>
</mapper>