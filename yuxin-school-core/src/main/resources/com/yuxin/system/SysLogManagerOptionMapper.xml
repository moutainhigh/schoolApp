<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yuxin.wx.system.mapper.SysLogManagerOptionMapper">
	<resultMap type="com.yuxin.wx.model.system.SysLogManagerOption" id="sysLogManagerOptionResultMap">
		<result property="id" column="id" />
		<result property="userId" column="user_id" />
		<result property="companyId" column="company_id" />
		<result property="optionTime" column="option_time" />
		<result property="operation" column="operation" />
		<result property="dataBefore" column="data_before" />
		<result property="dataAfter" column="data_after" />
	</resultMap>
	
	<sql id="table_columns">
		id,
		user_id,
		company_id,
		option_time,
		operation,
		data_before,
		data_after
    </sql>
	<sql id="entity_properties">
		#{id},
		#{userId},
		#{companyId},
		#{optionTime},
		#{operation},
		#{dataBefore},
		#{dataAfter}
	</sql>
	<sql id="batch_entity_properties">
		#{item.id},
		#{item.userId},
		#{item.companyId},
		#{item.optionTime},
		#{item.operation},
		#{item.dataBefore},
		#{item.dataAfter}
	</sql>
	
	<!-- 适用于主键自增类型 -->
	<insert id="insert" parameterType="com.yuxin.wx.model.system.SysLogManagerOption" useGeneratedKeys="true" keyProperty="id">
		insert into sys_log_manager_option( <include refid="table_columns" /> ) 
		values ( <include refid="entity_properties" /> )
	</insert>
	
	<!-- 批量添加 适用于主键自增类型  不支持返回主键-->
	<insert id="batchInsert" parameterType="java.util.List" useGeneratedKeys="true">
		insert into sys_log_manager_option( <include refid="table_columns" /> ) 
		values 
		<foreach item="item" collection="list" separator="," >
			( <include refid="entity_properties" /> )
		</foreach>
	</insert>
	
	<!--根据主键删除 -->
	<delete id="deleteById">
		delete from sys_log_manager_option
		where id = #{id}
	</delete>
	
	<!-- 根据ID批量删除 -->
	<delete id="deleteByIds">
		delete from sys_log_manager_option
		where id in
		<foreach item="item" collection="array" open="(" separator="," close=")">
			#{item}
		</foreach>
	</delete>
	
	<update id="update" parameterType="com.yuxin.wx.model.system.SysLogManagerOption">
		update sys_log_manager_option 
		<trim prefix="set" suffixOverrides=",">
			<if test="userId != null and userId != ''">user_id = #{userId},</if>
			<if test="companyId != null and companyId != ''">company_id = #{companyId},</if>
			<if test="optionTime != null and optionTime != ''">option_time = #{optionTime},</if>
			<if test="operation != null and operation != ''">operation = #{operation},</if>
			<if test="dataBefore != null and dataBefore != ''">data_before = #{dataBefore},</if>
			<if test="dataAfter != null and dataAfter != ''">data_after = #{dataAfter},</if>
		</trim>
		<where>id = #{id}</where>
	</update>
	
	<select id="findById" resultMap="sysLogManagerOptionResultMap" parameterType="String" >
		select <include refid="table_columns" />
		from sys_log_manager_option
		where id = #{id}
	</select>
	
	<select id="queryAll" resultMap="sysLogManagerOptionResultMap">
		select <include refid="table_columns" /> 
		from sys_log_manager_option
	</select>
	
	<!-- 使用like用法：columnName like concat('%',#columnName#,'%') -->
	<sql id="page_where">
		<trim prefix="where" prefixOverrides="and | or ">
			<if test="userId != null and userId != ''">and user_id = #{userId}</if>
			<if test="companyId != null and companyId != ''">and company_id = #{companyId}</if>
			<if test="optionTime != null and optionTime != ''">and option_time = #{optionTime}</if>
			<if test="operation != null and operation != ''">and operation = #{operation}</if>
			<if test="dataBefore != null and dataBefore != ''">and data_before = #{dataBefore}</if>
			<if test="dataAfter != null and dataAfter != ''">and data_after = #{dataAfter}</if>
		</trim>
	</sql>
	
	<select id="page" resultMap="sysLogManagerOptionResultMap" parameterType="com.yuxin.wx.model.system.SysLogManagerOption">
		select <include refid="table_columns" />
		from sys_log_manager_option
		<include refid="page_where" />
		limit #{firstIndex},#{pageSize}
	</select>
	
	<select id="pageCount" resultType="int" parameterType="com.yuxin.wx.model.system.SysLogManagerOption">
		select count(id) from sys_log_manager_option
		<include refid="page_where" />
	</select>
	
	<!-- 其他自定义SQL -->
	
</mapper>