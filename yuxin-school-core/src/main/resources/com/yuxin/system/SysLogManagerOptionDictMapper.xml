<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yuxin.wx.system.mapper.SysLogManagerOptionDictMapper">
	<resultMap type="com.yuxin.wx.model.system.SysLogManagerOptionDict" id="sysLogManagerOptionDictResultMap">
		<result property="id" column="id" />
		<result property="action" column="action" />
		<result property="operation" column="operation" />
		<result property="flag" column="flag" />
		<result property="monitoringTag" column="monitoring_tag" />
	</resultMap>
	
	<sql id="table_columns">
		id,
		action,
		operation,
		flag,
		monitoring_tag
    </sql>
	<sql id="entity_properties">
		#{id},
		#{action},
		#{operation},
		#{flag},
		#{monitoringTag}
	</sql>
	<sql id="batch_entity_properties">
		#{item.id},
		#{item.action},
		#{item.operation},
		#{item.flag},
		#{item.monitoringTag}
	</sql>
	
	<!-- 适用于主键自增类型 -->
	<insert id="insert" parameterType="com.yuxin.wx.model.system.SysLogManagerOptionDict" useGeneratedKeys="true" keyProperty="id">
		insert into sys_log_manager_option_dict( <include refid="table_columns" /> ) 
		values ( <include refid="entity_properties" /> )
	</insert>
	
	<!-- 批量添加 适用于主键自增类型  不支持返回主键-->
	<insert id="batchInsert" parameterType="java.util.List" useGeneratedKeys="true">
		insert into sys_log_manager_option_dict( <include refid="table_columns" /> ) 
		values 
		<foreach item="item" collection="list" separator="," >
			( <include refid="entity_properties" /> )
		</foreach>
	</insert>
	
	<!--根据主键删除 -->
	<delete id="deleteById">
		delete from sys_log_manager_option_dict
		where id = #{id}
	</delete>
	
	<!-- 根据ID批量删除 -->
	<delete id="deleteByIds">
		delete from sys_log_manager_option_dict
		where id in
		<foreach item="item" collection="array" open="(" separator="," close=")">
			#{item}
		</foreach>
	</delete>
	
	<update id="update" parameterType="com.yuxin.wx.model.system.SysLogManagerOptionDict">
		update sys_log_manager_option_dict 
		<trim prefix="set" suffixOverrides=",">
			<if test="action != null and action != ''">action = #{action},</if>
			<if test="operation != null and operation != ''">operation = #{operation},</if>
			<if test="flag != null and flag != ''">flag = #{flag},</if>
			<if test="monitoringTag != null and monitoringTag != ''">monitoring_tag = #{monitoringTag},</if>
		</trim>
		<where>id = #{id}</where>
	</update>
	
	<select id="findById" resultMap="sysLogManagerOptionDictResultMap" parameterType="String" >
		select <include refid="table_columns" />
		from sys_log_manager_option_dict
		where id = #{id}
	</select>
	
	<select id="queryAll" resultMap="sysLogManagerOptionDictResultMap">
		select <include refid="table_columns" /> 
		from sys_log_manager_option_dict
	</select>
	
	<!-- 使用like用法：columnName like concat('%',#columnName#,'%') -->
	<sql id="page_where">
		<trim prefix="where" prefixOverrides="and | or ">
			<if test="action != null and action != ''">and action = #{action}</if>
			<if test="operation != null and operation != ''">and operation = #{operation}</if>
			<if test="flag != null and flag != ''">and flag = #{flag}</if>
			<if test="monitoringTag != null and monitoringTag != ''">and monitoring_tag = #{monitoringTag}</if>
		</trim>
	</sql>
	
	<select id="page" resultMap="sysLogManagerOptionDictResultMap" parameterType="com.yuxin.wx.model.system.SysLogManagerOptionDict">
		select <include refid="table_columns" />
		from sys_log_manager_option_dict
		<include refid="page_where" />
		limit #{firstIndex},#{pageSize}
	</select>
	
	<select id="pageCount" resultType="int" parameterType="com.yuxin.wx.model.system.SysLogManagerOptionDict">
		select count(id) from sys_log_manager_option_dict
		<include refid="page_where" />
	</select>
	
	<!-- 其他自定义SQL -->
	
	<select id="queryOperationByAction" resultType="String" parameterType="String">
		select operation
		from sys_log_manager_option_dict
		where action = #{action}
	</select>
	
	<select id="queryByAction" resultMap="sysLogManagerOptionDictResultMap" parameterType="String">
		select <include refid="table_columns" />
		from sys_log_manager_option_dict
		where action = #{action}
	</select>
</mapper>