<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yuxin.wx.institution.mapper.InstitutionInfoMapper">
    <resultMap type="com.yuxin.wx.model.institution.InstitutionInfoVo" id="institutionInfoMap">
        <result property="id" column="id" />
        <result property="name" column="name" />
        <result property="userName" column="username" />
        <result property="userId" column="user_id" />
        <result property="province" column="province" />
        <result property="city" column="city" />
        <result property="area" column="area" />

        <result property="provinceName" column="provinceName" />
        <result property="cityName" column="cityName" />
        <result property="areaName" column="areaName" />

        <result property="address" column="address" />
        <result property="mobile" column="mobile" />
        <result property="isChain" column="is_chain" />
        <result property="chainId" column="chain_id" />
        <result property="chaiName" column="chain_name" />
        <result property="longitude" column="longitude" />
        <result property="latitude" column="latitude" />
        <result property="reservService" column="reserv_service" />
        <result property="isShelves" column="is_shelves" />
        <result property="isCertified" column="is_certified" />
        <result property="createTime" column="create_time" />
        <result property="updateTime" column="update_time" />
        <result property="firstcodeName" column="firstcodeName" />
        <result property="secondcodeName" column="secondcodeName" />
        <result property="oneLevelId" column="oneLevelId" />
        <result property="twoLevelId" column="twoLevelId" />
    </resultMap>
    <sql id="table_columns">
        id,
        name,
        province,
        city,
        area,
        address,
        mobile,
        is_chain,
        chain_id,
        chain_name,
        longitude,
        latitude,
        reserv_service,
        is_shelves,
        is_certified,
        create_time,
        update_time,
        user_id
    </sql>

    <sql id="entity_properties">
        #{id},
        #{name},
        #{province},
        #{city},
        #{area},
        #{address},
        #{mobile},
        #{isChain},
        #{chainId},
        #{chainName},
        #{longitude},
        #{latitude},
        #{reservService},
        #{isShelves},
        #{isCertified},
        #{createTime},
        #{updateTime},
        #{userId}
    </sql>

    <insert id="insert" parameterType="com.yuxin.wx.model.institution.InstitutionInfoVo" useGeneratedKeys="true" keyProperty="id">
        insert into institution_info( <include refid="table_columns" /> )
        values ( <include refid="entity_properties" /> )
    </insert>

    <update id="update" parameterType="com.yuxin.wx.model.institution.InstitutionInfoVo">
        update institution_info
        <trim prefix="set" suffixOverrides=",">
            <if test="name != null and name != ''">name = #{name},</if>
            <if test="province != null and province != ''">province = #{province},</if>
            <if test="city != null and city != ''">city = #{city},</if>
            <if test="area != null and area != ''">area = #{area},</if>
            <if test="address != null and address != ''">address = #{address},</if>
            mobile = #{mobile},
            <if test="isChain != null and isChain != ''">is_chain = #{isChain},</if>
            <if test="chainId != null and chainId != ''">chain_id = #{chainId},</if>
            <if test="chainName != null and chainName != ''">chain_name = #{chainName},</if>
            <if test="longitude != null and longitude != ''">longitude = #{longitude},</if>
            <if test="latitude != null and latitude != ''">latitude = #{latitude},</if>
            <if test="reservService != null">reserv_service = #{reservService},</if>
            <if test="isShelves != null ">is_shelves = #{isShelves},</if>
            <if test="userId != null and userId != ''">user_id = #{userId},</if>
            <if test="isCertified != null ">is_certified = #{isCertified},</if>
            <if test="createTime != null and createTime != ''">create_time = #{createTime},</if>
            <if test="updateTime != null and updateTime != ''">update_time = now(),</if>
        </trim>
        <where>id = #{id}</where>
    </update>

    <select id="findInstitutionInfoById" parameterType="Integer" resultMap="institutionInfoMap">
        select ii.* ,s.item_name provinceName,s1.item_name cityName,s2.item_name areaName from institution_info ii
        left JOIN sys_rise_school_dict s on s.item_code = ii.province
        left JOIN sys_rise_school_dict s1 on s1.item_code = ii.city
        left JOIN sys_rise_school_dict s2 on s2.item_code = ii.area
        where ii.id =#{id}
    </select>

    <select id="findInstitutionInfos" resultMap="institutionInfoMap" parameterType="com.yuxin.wx.model.institution.InstitutionInfoVo">
        select ii.id,ii.name,s.item_name as province,s1.item_name as city,s2.item_name as area,ii.is_shelves,ii.is_certified,ii.create_time,
        GROUP_CONCAT(distinct ic.code_name) firstcodeName,GROUP_CONCAT(ic1.code_name) secondcodeName,GROUP_CONCAT(distinct ic.id) oneLevelId,GROUP_CONCAT(ic1.id) twoLevelId
        from institution_info ii
		left JOIN sys_rise_school_dict s on s.item_code = ii.province
        left JOIN sys_rise_school_dict s1 on s1.item_code = ii.city
        left JOIN sys_rise_school_dict s2 on s2.item_code = ii.area
        JOIN institution_relation ir on ir.ins_id = ii.id
		JOIN institution_category ic on ic.id = ir.one_level_id
		JOIN institution_category ic1 on ic1.id = ir.two_level_id
        where 1=1 and ic.code_type = 0
        <if test="name != null and name != ''">and trim(replace(ii.name,' ','')) like trim(replace('%${name}%',' ',''))</if>
        <if test="province != null and province != ''">and s.item_code = #{province}</if>
        <if test="city != null and city != ''">and s1.item_code = #{city}</if>
        <if test="area != null and area != ''">and s2.item_code = #{area}</if>
        <if test="isShelves != null ">and ii.is_shelves = #{isShelves}</if>
        <if test="isCertified != null ">and ii.is_certified = #{isCertified}</if>
        <if test="oneLevelId != null and oneLevelId != ''">and ir.one_level_id = #{oneLevelId}</if>
        <if test="twoLevelId != null and twoLevelId != ''">and ir.two_level_id = #{twoLevelId}</if>
        <if test="startTime != null and startTime != '' and endTime == ''"><![CDATA[AND DATE_FORMAT(ii.create_time,"%Y-%m-%d") >= STR_TO_DATE(#{startTime},"%Y-%m-%d")]]></if>
        <if test="endTime != null and endTime != '' and startTime == ''">AND DATE_FORMAT(ii.create_time,"%Y-%m-%d") = STR_TO_DATE(#{endTime},"%Y-%m-%d")</if>
        <if test="startTime != null and startTime != '' and endTime != null and endTime != ''">AND DATE_FORMAT(ii.create_time,"%Y-%m-%d") BETWEEN STR_TO_DATE(#{startTime},"%Y-%m-%d") AND STR_TO_DATE(#{endTime},"%Y-%m-%d")</if>
        GROUP BY  ii.id
        order by ii.is_shelves desc,ii.create_time desc
        limit #{page},#{pageSize}
    </select>


    <select id="findInstitutionInfosCount" resultType="Integer" parameterType="com.yuxin.wx.model.institution.InstitutionInfoVo">
        select count(1) from(
        select ii.id,ii.name,s.item_name as province,s1.item_name as city,s2.item_name as area,ii.is_shelves,ii.is_certified,ii.create_time,
        GROUP_CONCAT(ic.code_name) firstcodeName,GROUP_CONCAT(ic1.code_name) secondcodeName,GROUP_CONCAT(ic.id) oneLevelId,GROUP_CONCAT(ic1.id) twoLevelId
        from institution_info ii
        left JOIN sys_rise_school_dict s on s.item_code = ii.province
        left JOIN sys_rise_school_dict s1 on s1.item_code = ii.city
        left JOIN sys_rise_school_dict s2 on s2.item_code = ii.area
        JOIN institution_relation ir on ir.ins_id = ii.id
        JOIN institution_category ic on ic.id = ir.one_level_id
        JOIN institution_category ic1 on ic1.id = ir.two_level_id
        where 1=1 and ic.code_type = 0
        <if test="name != null and name != ''">and ii.name  like '%${name}%'</if>
        <if test="province != null and province != ''">and s.item_code = #{province}</if>
        <if test="city != null and city != ''">and s1.item_code = #{city}</if>
        <if test="area != null and area != ''">and s2.item_code = #{area}</if>
        <if test="isShelves != null ">and ii.is_shelves = #{isShelves}</if>
        <if test="isCertified != null ">and ii.is_certified = #{isCertified}</if>
        <if test="oneLevelId != null and oneLevelId != ''">and ir.one_level_id = #{oneLevelId}</if>
        <if test="twoLevelId != null and twoLevelId != ''">and ir.two_level_id = #{twoLevelId}</if>
        <if test="startTime != null and startTime != '' and endTime == ''"><![CDATA[AND DATE_FORMAT(ii.create_time,"%Y-%m-%d") >= STR_TO_DATE(#{startTime},"%Y-%m-%d")]]></if>
        <if test="endTime != null and endTime != '' and startTime == ''">AND DATE_FORMAT(ii.create_time,"%Y-%m-%d") = STR_TO_DATE(#{endTime},"%Y-%m-%d")</if>
        <if test="startTime != null and startTime != '' and endTime != null and endTime != ''">AND DATE_FORMAT(ii.create_time,"%Y-%m-%d") BETWEEN STR_TO_DATE(#{startTime},"%Y-%m-%d") AND STR_TO_DATE(#{endTime},"%Y-%m-%d")</if>
        GROUP BY  ii.id
        )ins
    </select>

    <select id="checkUser" parameterType="Integer" resultMap="institutionInfoMap">
        select ii.id ,u.username ,u.id as user_id from  users u
        LEFT JOIN institution_info ii on u.id = ii.user_id
        where ii.id = #{id}
    </select>

    <select id="queryInstitutionByUserId" parameterType="map" resultMap="institutionInfoMap">
       select * from institution_info where user_id=#{userId}
    </select>

    <select id="insCheckName" parameterType="String" resultMap="institutionInfoMap" >
        select * from institution_info where name = #{name}
    </select>

    <select id="queryInsByComment" parameterType="map" resultMap="institutionInfoMap">
        select ii.id,ii.name from comment c
        LEFT JOIN institution_info ii on ii.id = c.relation_id
        where type = 0 GROUP BY id
    </select>

    <select id="queryInitInsClassList" parameterType="map" resultMap="institutionInfoMap">
        select ii.id,ii.name,c.id commentId,c.relation_id,c.content from `comment` c
        LEFT JOIN ins_class_type_relation icr on icr.class_type_id = c.relation_id
        LEFT JOIN institution_info ii on ii.id = icr.ins_id
        where type = 1 GROUP BY ii.id
    </select>
</mapper>