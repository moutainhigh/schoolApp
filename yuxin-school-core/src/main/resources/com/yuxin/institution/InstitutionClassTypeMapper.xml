<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yuxin.wx.institution.mapper.InstitutionClassTypeMapper">


	<!-- 课程和机构关联表 -->
	<resultMap type="com.yuxin.wx.model.institution.InsClassRelationVO" id="classTypeRelationResultMap">
		<result property="id" column="id" />
		<result property="insId" column="ins_id" />
		<result property="classTypeId" column="class_type_id" />
		<result property="isOnline" column="is_online" />
		<result property="isLink" column="is_link" />
		<result property="sort" column="sort" />


	</resultMap>

	<sql id="relation_table_columns">
		id,
		ins_id,
		class_type_id,
		is_online,
		is_link,
		sort
	</sql>


	<select id="findRelationById" resultMap="classTypeRelationResultMap" parameterType="Integer" resultType="com.yuxin.wx.model.institution.InsClassRelationVO" >
		select <include refid="relation_table_columns" />
		from ins_class_type_relation
		where id = #{id}
	</select>

	<!-- 根据关联表id更新关联状态 -->
	<update id="delRelationLink" parameterType="Integer"  >
		UPDATE `ins_class_type_relation` SET `is_link` = 0 WHERE `id` = #{rid}
	</update>
	<!-- 将指定机构课程排序依次-1 ， 用在删除关联课程时调用 -->
	<update id="updateSubSourtBantch" parameterType="map" >
		UPDATE `ins_class_type_relation` SET `sort` = `sort` - 1 WHERE  `is_link` = 1 AND `sort` &gt; #{sort} AND `ins_id` = #{insId}
	</update>

	<!-- 将指定机构课程排序依次+1 ， 用在新增关联课程时调用 -->
	<update id="updateSourtBantch" parameterType="Integer" >
		UPDATE `ins_class_type_relation` SET `sort` = `sort` + 1 WHERE  `is_link` = 1 AND `ins_id` = #{insId}
	</update>

	<select id="getCountOfOnlineClassyCidInsId" parameterType="map" resultType="int">
		SELECT COUNT(id) FROM `ins_class_type_relation` WHERE `ins_id` = #{insId} AND `class_type_id` = #{cid} AND `is_online` = 1
	</select>

	<!-- 新增一个关联课程 -->
	<update id="addRelationLink" parameterType="Integer" >
		UPDATE `ins_class_type_relation` SET `is_link` = 1 ,sort = 1 WHERE `id` = #{rid}
	</update>

	<update id="addSortRelationStep1" parameterType="map"  >
		UPDATE `ins_class_type_relation` SET `sort`  = `sort`+1 WHERE `sort` = #{sort} AND `ins_id` = #{insId}
	</update>

	<update id="addSortRelationStep2" parameterType="Integer"  >
		UPDATE `ins_class_type_relation` SET `sort`  = `sort`- 1 WHERE id = #{id}
	</update>

	<update id="subSortRelationStep1" parameterType="map"  >
		UPDATE `ins_class_type_relation` SET `sort`  = `sort`-1 WHERE `sort` = #{sort} AND `ins_id` = #{insId}
	</update>

	<update id="subSortRelationStep2" parameterType="Integer"  >
		UPDATE `ins_class_type_relation` SET `sort`  = `sort`+ 1 WHERE id = #{id}
	</update>






	<!--课程-->
	<resultMap type="com.yuxin.wx.model.institution.InstitutionClassTypeVo" id="classTypeResultMap">
		<result property="id" column="id" />
		<result property="name" column="name" />
		<result property="coverUrl" column="cover_url" />
		<result property="price" column="price" />
		<result property="isReser" column="is_reser" />
		<result property="reserCount" column="reser_count" />
		<result property="summary" column="summary" />
		<result property="detaildesc" column="detaildesc" />
		<result property="isShelves" column="is_shelves" />
		<result property="delFlag" column="del_flag" />
		<result property="createTime" column="create_time" />
		<result property="updateTime" column="update_time" />
		<result property="isRecommend" column="is_recommend" />

	</resultMap>

	<resultMap type="com.yuxin.wx.model.institution.ClassTypeOnlineVo" id="classTypeOnlineResultMap">
		<result property="cid" column="cid" />
		<result property="name" column="name" />
		<result property="rid" column="rid" />
		<result property="insId" column="insId" />
		<result property="isLink" column="isLink" />
		<result property="sort" column="sort" />
	</resultMap>


	<resultMap type="com.yuxin.wx.model.institution.ClassTypeOnlineFindVo" id="classTypeOnlineFindResultMap">

		<result property="id" column="id" />
		<result property="name" column="name" />
		<result property="companyName" column="companyName" />
		<result property="subjectName" column="subjectName" />
		<result property="link" column="link" />
		<result property="rid" column="rid" />

	</resultMap>

	<sql id="table_columns">
		id,
		name,
		cover_url,
		price,
		is_reser,
		reser_count,
		summary,
		detaildesc,
		is_shelves,
		del_flag,
		create_time,
		update_time,
		is_recommend
    </sql>
	<sql id="entity_properties">
		#{id},
		#{name},
		#{coverUrl},
		#{price},
		#{isReser},
		#{reserCount},
		#{summary},
		#{detaildesc},
		#{isShelves},
		#{delFlag},
		#{createTime},
		#{updateTime},
		#{isRecommend}
	</sql>
	<sql id="batch_entity_properties">
		#{item.id},
		#{item.name},
		#{item.coverUrl},
		#{item.price},
		#{item.isReser},
		#{item.reserCount},
		#{item.summary},
		#{item.detaildesc},
		#{item.isShelves},
		#{item.delFlag},
		#{item.createTime},
		#{item.updateTime},
		#{item.isRecommend}

	</sql>
	
	<!-- 适用于主键自增类型 -->
	<insert id="insert" parameterType="com.yuxin.wx.model.institution.InstitutionClassTypeVo" useGeneratedKeys="true" keyProperty="id" keyColumn="id">
		insert into ins_class_type( <include refid="table_columns" /> ) 
		values ( <include refid="entity_properties" /> )
	</insert>
	
	<!-- 批量添加 适用于主键自增类型  不支持返回主键-->
	<insert id="batchInsert" parameterType="java.util.List" useGeneratedKeys="true">
		insert into ins_class_type( <include refid="table_columns" /> ) 
		values 
		<foreach item="item" collection="list" separator="," >
			( <include refid="entity_properties" /> )
		</foreach>
	</insert>
	
	<!--根据主键删除 -->
	<delete id="deleteById">
		delete from ins_class_type
		where id = #{id}
	</delete>
	
	<!-- 根据ID批量删除 -->
	<delete id="deleteByIds">
		delete from ins_class_type
		where id in
		<foreach item="item" collection="array" open="(" separator="," close=")">
			#{item}
		</foreach>
	</delete>
	
	<update id="update" parameterType="com.yuxin.wx.model.institution.InstitutionClassTypeVo">
		update ins_class_type 
		<trim prefix="set" suffixOverrides=",">
			<if test="name != null and name != ''">name = #{name},</if>
			<if test="coverUrl != null and coverUrl != ''">cover_url = #{coverUrl},</if>
			price = #{price},
			is_reser = #{isReser},
			reser_count = #{reserCount},
			summary = #{summary},
			is_recommend = #{isRecommend},
			<if test="detaildesc != null and detaildesc != ''">detaildesc = #{detaildesc},</if>
			is_shelves = #{isShelves},
			del_flag = #{delFlag},
			<if test="createTime != null and createTime != ''">create_time = #{createTime},</if>
			<if test="updateTime != null and updateTime != ''">update_time = #{updateTime}</if>
		</trim>
		<where>id = #{id}</where>
	</update>
	
	<select id="findById" resultMap="classTypeResultMap" parameterType="String" >
		select <include refid="table_columns" />
		from ins_class_type
		where id = #{id}
	</select>
	
	<select id="queryAll" resultMap="classTypeResultMap">
		select <include refid="table_columns" /> 
		from ins_class_type
	</select>

	<select id="queryAllByIns" resultMap="classTypeResultMap" parameterType="Integer">
		select ct.name,ct.id  from comment c
        JOIN ins_class_type ct on ct.id = c.relation_id and type = 1
		JOIN ins_class_type_relation ic on ic.class_type_id = ct.id
		JOIN institution_info ii on ii.id = ic.ins_id
		JOIN users_front u on c.user_id = u.id
		where c.del_flag = 0 and c.type =1
		<if test="id != null and id !=''"> and ii.id = #{id} </if>
		GROUP BY ct.id
        ORDER BY ct.create_time desc

	</select>

	<select id="queryReServApplyAllByIns" resultMap="classTypeResultMap" parameterType="Integer">
		SELECT
		ct. NAME,
		ct.id
		FROM
		ins_class_type ct
		LEFT JOIN ins_class_type_relation ict ON ict.class_type_id = ct.id
		LEFT JOIN institution_info ii ON ii.id = ict.ins_id
		WHERE
		<if test="id != null and id !=''">  ii.id = #{id} </if>
		ORDER BY ct.create_time desc

	</select>
	
	<!-- 使用like用法：columnName like concat('%',#columnName#,'%') -->
	<sql id="page_where">
		<trim prefix="where" prefixOverrides="and | or ">
			<if test="isShelves != null and isShelves != ''">is_shelves = #{isShelves},</if>
		</trim>
	</sql>
	
	<select id="page" resultMap="classTypeResultMap" parameterType="map">
		SELECT ict.* FROM  ins_class_type  ict 
		INNER JOIN ins_class_type_relation ictr ON ict.`id` = ictr.`class_type_id`
		and ictr.is_online = 0
		and ict.del_flag = 0
		<if test="isShelves != null "> and ict.is_shelves = #{isShelves} </if>
		INNER JOIN institution_info info ON ictr.`ins_id` = info.`id`
		<if test="insId != null and insId != ''">and info.id = #{insId} </if>

		order by ict.`is_recommend` DESC , ict.is_shelves DESC , ict.create_time DESC

		limit #{firstIndex},#{pageSize}
	</select>

	<select id="findIsrecommendCount" parameterType="map" resultType="Integer" >
		SELECT
			count(1)
		FROM
			ins_class_type ict
		INNER JOIN ins_class_type_relation ictr ON ict.`id` = ictr.`class_type_id` AND ict.del_flag = 0
		INNER JOIN institution_info info ON ictr.`ins_id` = info.`id`
		AND ictr.is_online = 0 and ict.is_recommend = 1

		<if test="insId != null and insId != ''">and info.id = #{insId} </if>
	</select>

	
	<select id="pageCount" resultType="int" parameterType="map">
		SELECT COUNT(ict.id) FROM  ins_class_type  ict 
		INNER JOIN ins_class_type_relation ictr ON ict.`id` = ictr.`class_type_id`
		and ictr.is_online = 0
		and ict.del_flag = 0
		<if test="isShelves != null "> and ict.is_shelves = #{isShelves} </if>
		INNER JOIN institution_info info ON ictr.`ins_id` = info.`id`
		<if test="insId != null and insId != ''">and info.id = #{insId}</if>
	</select>

	<select id="getRecommendCountByClassTypeId" resultType="int" parameterType="Integer">
		SELECT COUNT(ict.id) FROM  ins_class_type  ict
		INNER JOIN ins_class_type_relation ictr ON ict.`id` = ictr.`class_type_id`
		AND ict.is_shelves = 1
		AND ict.`is_reser` = 1
		INNER JOIN institution_info info ON ictr.`ins_id` = info.`id`
		AND info.id = #{insId}
	</select>



	<!-- 在线课程部分  -->
	<select id="pageOnline" resultMap="classTypeOnlineResultMap" parameterType="map">
		SELECT
		ct.id cid,
		ct.`name`,
		ictr.`id` rid,
		info.`id` insId ,
		ictr.`is_link` isLink ,
		ictr.`sort`
		FROM
		`class_type` ct
		INNER JOIN `ins_class_type_relation` ictr
		ON ct.`id` = ictr.`class_type_id`
		<if test="link != null ">and ictr.`is_link`  = #{link} </if>
		AND ictr.`is_online` = 1
		INNER JOIN `institution_info` info
		ON ictr.`ins_id` = info.`id`
		<if test="insId != null ">and info.id = #{insId} </if>
		ORDER BY ictr.`is_link` DESC,
		ictr.`sort` ASC
		limit #{firstIndex},#{pageSize}

	</select>

	<select id="pageOnlineCount" resultType="int" parameterType="map">
		SELECT
		COUNT(ct.id)
		FROM
		`class_type` ct
		INNER JOIN `ins_class_type_relation` ictr
		ON ct.`id` = ictr.`class_type_id`
		<if test="link != null ">and ictr.`is_link`  = #{link} </if>
		AND ictr.`is_online` = 1
		INNER JOIN `institution_info` info
		ON ictr.`ins_id` = info.`id`
		<if test="insId != null ">and info.id = #{insId} </if>
		ORDER BY ictr.`is_link` DESC,
		ictr.`id` DESC

	</select>


	<select id="getOnlineCount" resultType="int" parameterType="map">
		SELECT
		COUNT(ct.id)
		FROM
		`class_type` ct
		INNER JOIN `ins_class_type_relation` ictr
		ON ct.`id` = ictr.`class_type_id`
		and ictr.`is_link`  = 1
		AND ictr.`is_online` = 1
		INNER JOIN `institution_info` info
		ON ictr.`ins_id` = info.`id`
		<if test="insId != null ">and info.id = #{insId} </if>
		ORDER BY ictr.`is_link` DESC,
		ictr.`id` DESC

	</select>


	<select id="findOnlineClassType" resultMap="classTypeOnlineFindResultMap" parameterType="map">
		SELECT
		ct.`id` ,
		ct.`name`,
		c.`company_name` companyName,
		sci.`item_name` subjectName,
		ictr.`is_link` link ,
		ictr.id rid
		FROM
		class_type ct
		INNER JOIN commodity_product_realtion cp on cp.product_id = ct.id
		INNER JOIN commodity cy on cy.id = cp.com_id
		INNER JOIN app_shelves ap on ap.comdity_id = cy.id
		INNER JOIN company c ON ct.`company_id` = c.`id`
		AND  ap.is_shelves =1
		and ct.del_flag = 0
		<if test="name != null and name != ''">and trim(replace(ct.`name`,' ','')) = trim(replace('${name}',' ',''))</if>
		LEFT JOIN `sys_config_item` sci
		ON ct.`item_third_code` = sci.`item_code`
		LEFT JOIN `ins_class_type_relation` ictr
		ON ct.`id` = ictr.`class_type_id`
		AND ictr.`ins_id` = #{insId}

		GROUP BY ct.`id`

	</select>

	<!-- 新增一个线上课程 -->
	<insert id="addOnlineClass" parameterType="map" >
		INSERT INTO `ins_class_type_relation` (`ins_id`,`class_type_id`,`is_online`,`is_link`)
			VALUES
		(#{insId} , #{cid} , 1 , 0)

	</insert>

	<!-- 新增一个线下课程 -->
	<insert id="addUnderlineClass" parameterType="map" >
		INSERT INTO `ins_class_type_relation` (`ins_id`,`class_type_id`,`is_online`)
		VALUES
		(#{insId} , #{cid} , 0 )

	</insert>

	<!-- 删除中间表信息 -->

	<delete id="deleteRelation" parameterType="map">
		delete from ins_class_type_relation where `ins_id` = #{insId} and class_type_id = #{cid} and is_online = 0
	</delete>

	<delete id="deleteOnlineRelation" parameterType="Integer">
		delete from ins_class_type_relation where id = #{id}  and is_online = 1
	</delete>


	<select id="countUnderllineClass" parameterType="map" resultType="Integer" >
		SELECT
		  COUNT(ict.`id`)
		FROM
		  `ins_class_type` ict
		  INNER JOIN `ins_class_type_relation` ictr
			ON ict.`id` = ictr.`class_type_id`
			AND ictr.`ins_id` = #{insId}
			AND ict.`name` = #{name}
		<if test="classId != null "> AND ict.`id` != #{classId} </if>


	</select>
	
	<update id="updateDelFlag" parameterType="Integer">
		update ins_class_type 
		   set del_flag = 1
		 where id = #{courseId}
	</update>


</mapper>