<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yuxin.wx.student.mapper.StudentGroupMapper">
	<resultMap type="com.yuxin.wx.model.student.StudentGroup" id="studentGroupResultMap">
		<result property="id" column="id" />
		<result property="groupName" column="group_name" />
		<result property="parentId" column="parent_id" />
		<result property="createTime" column="create_time" />
		<result property="updator" column="updator" />
		<result property="companyId" column="company_id" />
	</resultMap>
	
	<sql id="table_columns">
		id,
		group_name,
		parent_id,
		create_time,
		updator,
		company_id
    </sql>
	<sql id="entity_properties">
		#{id},
		#{groupName},
		#{parentId},
		#{createTime},
		#{updator},
		#{companyId}
	</sql>
	<sql id="batch_entity_properties">
		#{item.id},
		#{item.groupName},
		#{item.parentId},
		#{item.createTime},
		#{item.updator},
		#{item.companyId}
	</sql>
	
	<!-- 适用于主键自增类型 -->
	<insert id="insert" parameterType="com.yuxin.wx.model.student.StudentGroup" useGeneratedKeys="true" keyProperty="id">
		insert into student_group( <include refid="table_columns" /> ) 
		values ( <include refid="entity_properties" /> )
	</insert>
	
	<!-- 批量添加 适用于主键自增类型  不支持返回主键-->
	<insert id="batchInsert" parameterType="java.util.List" useGeneratedKeys="true">
		insert into student_group( <include refid="table_columns" /> ) 
		values 
		<foreach item="item" collection="list" separator="," >
			( <include refid="entity_properties" /> )
		</foreach>
	</insert>
	
	<!--根据主键删除 -->
	<delete id="deleteById">
		delete from student_group
		where id = #{id}
	</delete>
	
	<!-- 根据ID批量删除 -->
	<delete id="deleteByIds">
		delete from student_group
		where id in
		<foreach item="item" collection="array" open="(" separator="," close=")">
			#{item}
		</foreach>
	</delete>
	
	<update id="update" parameterType="com.yuxin.wx.model.student.StudentGroup">
		update student_group 
		<trim prefix="set" suffixOverrides=",">
			<if test="groupName != null and groupName != ''">group_name = #{groupName},</if>
			<if test="parentId != null and parentId != ''">parent_id = #{parentId},</if>
			<if test="createTime != null and createTime != ''">create_time = #{createTime},</if>
			<if test="updator != null and updator != ''">updator = #{updator},</if>
			<if test="companyId != null and companyId != ''">company_id = #{companyId},</if>
		</trim>
		<where>id = #{id}</where>
	</update>
	
	<select id="findById" resultMap="studentGroupResultMap" parameterType="String" >
		select <include refid="table_columns" />
		from student_group
		where id = #{id}
	</select>
	
	<select id="queryAll" resultMap="studentGroupResultMap">
		select <include refid="table_columns" /> 
		from student_group
	</select>
	
	<!-- 使用like用法：columnName like concat('%',#columnName#,'%') -->
	<sql id="page_where">
		<trim prefix="where" prefixOverrides="and | or ">
			<if test="groupName != null and groupName != ''">and group_name = #{groupName}</if>
			<if test="parentId != null and parentId != ''">and parent_id = #{parentId}</if>
			<if test="createTime != null and createTime != ''">and create_time = #{createTime}</if>
			<if test="updator != null and updator != ''">and updator = #{updator}</if>
			<if test="companyId != null and companyId != ''">and company_id = #{companyId}</if>
		</trim>
	</sql>
	
	<select id="page" resultMap="studentGroupResultMap" parameterType="com.yuxin.wx.model.student.StudentGroup">
		select <include refid="table_columns" />
		from student_group
		<include refid="page_where" />
		limit #{firstIndex},#{pageSize}
	</select>
	
	<select id="pageCount" resultType="int" parameterType="com.yuxin.wx.model.student.StudentGroup">
		select count(id) from student_group
		<include refid="page_where" />
	</select>
	
	<!-- 其他自定义SQL -->
	<select id="findStudentGroup1ByCompanyId" resultMap="studentGroupResultMap" parameterType="com.yuxin.wx.model.student.StudentGroup">
		select <include refid="table_columns" />
		from student_group
		where company_id=#{companyId} and ( parent_id is null or parent_id='' )
	</select>
	<select id="findStudentGroup2ByCompanyIdAndPId" resultMap="studentGroupResultMap" parameterType="com.yuxin.wx.model.student.StudentGroup">
		select <include refid="table_columns" />
		from student_group
		where company_id=#{companyId} and parent_id=#{parentId}
	</select>
	<select id="checkGroupName1" resultType="Integer" parameterType="com.yuxin.wx.model.student.StudentGroup">
		select count(*)
		from student_group
		where company_id=#{companyId} and binary group_name=#{groupName} and parent_id is NULL limit 1
	</select>
	<select id="checkGroupName2" resultType="Integer" parameterType="com.yuxin.wx.model.student.StudentGroup">
		select count(*)
		from student_group
		where company_id=#{companyId} and binary group_name=#{groupName} and parent_id=#{parentId} limit 1
	</select>
	<!--根据parentId删除 -->
	<delete id="deleteByParentId">
		delete from student_group
		where parent_id = #{id}
	</delete>
</mapper>