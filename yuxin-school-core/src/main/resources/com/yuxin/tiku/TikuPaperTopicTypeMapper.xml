<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yuxin.wx.tiku.mapper.TikuPaperTopicTypeMapper">
	<resultMap type="com.yuxin.wx.model.tiku.TikuPaperTopicType" id="tikuPaperTopicTypeResultMap">
		<result property="id" column="id" />
		<result property="paperId" column="paper_id" />
		<result property="topicType" column="topic_type" />
		<result property="scorePerTopic" column="score_per_topic" />
	</resultMap>
	
	<sql id="table_columns">
		id,
		paper_id,
		topic_type,
		score_per_topic
    </sql>
	<sql id="entity_properties">
		#{id},
		#{paperId},
		#{topicType},
		#{scorePerTopic}
	</sql>
	<sql id="batch_entity_properties">
		#{item.id},
		#{item.paperId},
		#{item.topicType},
		#{item.scorePerTopic}
	</sql>
	
	<!-- 适用于主键自增类型 -->
	<insert id="insert" parameterType="com.yuxin.wx.model.tiku.TikuPaperTopicType" useGeneratedKeys="true" keyProperty="id">
		insert into tiku_paper_topic_type( <include refid="table_columns" /> ) 
		values ( <include refid="entity_properties" /> )
	</insert>
	
	<!-- 批量添加 适用于主键自增类型  不支持返回主键-->
	<insert id="batchInsert" parameterType="java.util.List" useGeneratedKeys="true">
		insert into tiku_paper_topic_type( <include refid="table_columns" /> ) 
		values 
		<foreach item="item" collection="list" separator="," >
			( <include refid="batch_entity_properties" /> )
		</foreach>
	</insert>
	
	<!--根据主键删除 -->
	<delete id="deleteById">
		delete from tbl_users
		where id = #{id}
	</delete>
	
	<!-- 根据ID批量删除 -->
	<delete id="deleteByIds">
		delete from tiku_paper_topic_type
		where id in
		<foreach item="item" collection="array" open="(" separator="," close=")">
			#{item}
		</foreach>
	</delete>
	
	<update id="update" parameterType="com.yuxin.wx.model.tiku.TikuPaperTopicType">
		update tiku_paper_topic_type 
		<trim prefix="set" suffixOverrides=",">
			<if test="paperId != null and paperId != ''">paper_id = #{paperId},</if>
			<if test="topicType != null and topicType != ''">topic_type = #{topicType},</if>
			<if test="scorePerTopic != null and scorePerTopic != ''">score_per_topic = #{scorePerTopic},</if>
		</trim>
		<where>id = #{id}</where>
	</update>
	
	<select id="findById" resultMap="tikuPaperTopicTypeResultMap" parameterType="String" >
		select <include refid="table_columns" />
		from tiku_paper_topic_type
		where id = #{id}
	</select>
	
	<select id="queryAll" resultMap="tikuPaperTopicTypeResultMap">
		select <include refid="table_columns" /> 
		from tiku_paper_topic_type
	</select>
	
	<!-- 使用like用法：columnName like concat('%',#columnName#,'%') -->
	<sql id="page_where">
		<trim prefix="where" prefixOverrides="and | or ">
			<if test="paperId != null and paperId != ''">and paper_id = #{paperId}</if>
			<if test="topicType != null and topicType != ''">and topic_type = #{topicType}</if>
			<if test="scorePerTopic != null and scorePerTopic != ''">and score_per_topic = #{scorePerTopic}</if>
		</trim>
	</sql>
	
	<select id="page" resultMap="tikuPaperTopicTypeResultMap" parameterType="com.yuxin.wx.model.tiku.TikuPaperTopicType">
		select <include refid="table_columns" />
		from tiku_paper_topic_type
		<include refid="page_where" />
		limit #{firstIndex},#{pageSize}
	</select>
	
	<select id="pageCount" resultType="int" parameterType="com.yuxin.wx.model.tiku.TikuPaperTopicType">
		select count(id) from tiku_paper_topic_type
		<include refid="page_where" />
	</select>
	
	<!-- 其他自定义SQL -->
	<select id="findScoreByPaperid" parameterType="map" resultType="Double">
		select score_per_topic 
		from tiku_paper_topic_type
		where paper_id = #{paperId} and 
			topic_type = #{topicType}
			limit 1
	</select>
	
	<select id="findScoreById" parameterType="map" resultMap="tikuPaperTopicTypeResultMap">
		select <include refid="table_columns"/>
		from tiku_paper_topic_type
		where paper_id = #{paperId} and 
			topic_type = #{topicType}
			limit 1
	</select>
</mapper>