<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yuxin.wx.tiku.mapper.TikuSectionMapper">
	<resultMap type="com.yuxin.wx.model.tiku.TikuSection" id="tikuSectionResultMap">
		<result property="id" column="id" />
		<result property="chapterId" column="chapter_id" />
		<result property="sectionName" column="section_name" />
		<result property="sectionOrder" column="section_order" />
		<result property="delFlag" column="del_flag" />
		<result property="companyId" column="company_id" />
		<result property="tikuCategoryId" column="tiku_category_id" />
		<result property="tikuSubjectId" column="tiku_subject_id" />
	</resultMap>
	
	<sql id="table_columns">
		id,
		chapter_id,
		section_name,
		section_order,
		del_flag,
		company_id,
		tiku_category_id,
		tiku_subject_id
    </sql>
	<sql id="entity_properties">
		#{id},
		#{chapterId},
		#{sectionName},
		#{sectionOrder},
		#{delFlag},
		#{companyId},
		#{tikuCategoryId},
		#{tikuSubjectId}
	</sql>
	<sql id="batch_entity_properties">
		#{item.id},
		#{item.chapterId},
		#{item.sectionName},
		#{item.sectionOrder},
		#{item.delFlag},
		#{item.companyId},
		#{item.tikuCategoryId},
		#{item.tikuSubjectId}
	</sql>
	
	<!-- 适用于主键自增类型 -->
	<insert id="insert" parameterType="com.yuxin.wx.model.tiku.TikuSection" useGeneratedKeys="true" keyProperty="id">
		insert into tiku_section( <include refid="table_columns" /> ) 
		values ( <include refid="entity_properties" /> )
	</insert>
	
	<!-- 批量添加 适用于主键自增类型  不支持返回主键-->
	<insert id="batchInsert" parameterType="java.util.List" useGeneratedKeys="true">
		insert into tiku_section( <include refid="table_columns" /> ) 
		values 
		<foreach item="item" collection="list" separator="," >
			( <include refid="batch_entity_properties" /> )
		</foreach>
	</insert>
	
	<!--根据主键删除 -->
	<delete id="deleteById">
		delete from tiku_section
		where id = #{id}
	</delete>
	
	<delete id="deleteByTikuId">
		delete from tiku_section
		where tiku_category_id = #{tikuId}
	</delete>
	
	<!-- 根据ID批量删除 -->
	<delete id="deleteByIds">
		delete from tiku_section
		where id in
		<foreach item="item" collection="array" open="(" separator="," close=")">
			#{item}
		</foreach>
	</delete>
	
	<update id="update" parameterType="com.yuxin.wx.model.tiku.TikuSection">
		update tiku_section 
		<trim prefix="set" suffixOverrides=",">
			<if test="chapterId != null and chapterId != ''">chapter_id = #{chapterId},</if>
			<if test="sectionName != null and sectionName != ''">section_name = #{sectionName},</if>
			<if test="sectionOrder != null">section_order = #{sectionOrder},</if>
			<if test="delFlag != null and delFlag != ''">del_flag = #{delFlag},</if>
			<if test="companyId != null and companyId != ''">company_id = #{companyId},</if>
			<if test="tikuCategoryId != null and tikuCategoryId != ''">tiku_category_id = #{tikuCategoryId},</if>
			<if test="tikuSubjectId != null and tikuSubjectId != ''">tiku_subject_id = #{tikuSubjectId},</if>
		</trim>
		<where>id = #{id}</where>
	</update>
	
	<select id="findById" resultMap="tikuSectionResultMap" parameterType="String" >
		select <include refid="table_columns" />
		from tiku_section
		where id = #{id}
	</select>
	
	<select id="queryAll" resultMap="tikuSectionResultMap">
		select <include refid="table_columns" /> 
		from tiku_section
	</select>
	
	<!-- 使用like用法：columnName like concat('%',#columnName#,'%') -->
	<sql id="page_where">
		<trim prefix="where" prefixOverrides="and | or ">
			<if test="chapterId != null and chapterId != ''">and chapter_id = #{chapterId}</if>
			<if test="sectionName != null and sectionName != ''">and section_name = #{sectionName}</if>
			<if test="sectionOrder != null and sectionOrder != ''">and section_order = #{sectionOrder}</if>
			<if test="delFlag != null and delFlag != ''">and del_flag = #{delFlag}</if>
			<if test="companyId != null and companyId != ''">and company_id = #{companyId}</if>
			<if test="tikuCategoryId != null and tikuCategoryId != ''">and tiku_category_id = #{tikuCategoryId}</if>
			<if test="tikuSubjectId != null and tikuSubjectId != ''">and tiku_subject_id = #{tikuSubjectId}</if>
		</trim>
	</sql>
	
	<select id="page" resultMap="tikuSectionResultMap" parameterType="com.yuxin.wx.model.tiku.TikuSection">
		select <include refid="table_columns" />
		from tiku_section
		<include refid="page_where" />
		limit #{firstIndex},#{pageSize}
	</select>
	
	<select id="pageCount" resultType="int" parameterType="com.yuxin.wx.model.tiku.TikuSection">
		select count(id) from tiku_section
		<include refid="page_where" />
	</select>
	
	<!-- 其他自定义SQL -->
	<select id="findTikuSection" resultMap="tikuSectionResultMap" parameterType="com.yuxin.wx.model.tiku.TikuSection">
		select <include refid="table_columns" />
		from tiku_section
		<include refid="page_where" />
		order by section_order
	</select>
	
	<select id="secCount" resultType="Integer" parameterType="Integer">
		select count(id) from tiku_exampoint where section_id = #{secId} limit 1
	</select>
	
	<select id="findSectionByChapterId" parameterType="Integer" resultMap="tikuSectionResultMap">
		select <include refid="table_columns"/>
		from tiku_section 
		where chapter_id = #{chapterId} and 
			del_flag = 0 
			order by section_order
	</select>
	
	<select id="getMaxSectionOrder" parameterType="Integer" resultType="Integer">
		select max(section_order) from tiku_section where chapter_id = #{chapterId} limit 1
	</select>
	
	<delete id="deleteBySubId">
		delete from tiku_section
		where tiku_subject_id = #{subId}
	</delete>
</mapper>