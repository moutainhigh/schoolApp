<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yuxin.wx.course.mapper.CourseRemotePayoffMapper">
	<resultMap type="com.yuxin.wx.model.course.CourseRemotePayoff" id="courseRemotePayoffResultMap">
		<result property="id" column="id" />
		<result property="classTypeId" column="class_type_id" />
		<result property="classTypeName" column="class_type_name" />
		<result property="examTermId" column="exam_term_id" />
		<result property="examTermName" column="exam_term_name" />
		<result property="payoffDate" column="payoff_date" />
		<result property="payoffFee" column="payoff_fee" />
		<result property="payoffStatus" column="payoff_status" />
		<result property="payoffPercent" column="payoff_percent" />
		<result property="createTime" column="create_time" />
		<result property="creator" column="creator" />
		<result property="updateTime" column="update_time" />
		<result property="updator" column="updator" />
	</resultMap>
	<sql id="table_columns">
		id,
		class_type_id,
		class_type_name,
		exam_term_id,
		exam_term_name,
		payoff_date,
		payoff_fee,
		payoff_status,
		payoff_percent,
		create_time,
		creator,
		update_time,
		updator
    </sql>
	<sql id="entity_properties">
		#{id},
		#{classTypeId},
		#{classTypeName},
		#{examTermId},
		#{examTermName},
		#{payoffDate},
		#{payoffFee},
		#{payoffStatus},
		#{payoffPercent},
		#{createTime},
		#{creator},
		#{updateTime},
		#{updator}
	</sql>
	
	<!-- 适用于主键自增类型 -->
	<insert id="insert" parameterType="com.yuxin.wx.model.course.CourseRemotePayoff" useGeneratedKeys="true" keyProperty="id">
		insert into course_remote_payoff( <include refid="table_columns" /> ) 
		values ( <include refid="entity_properties" /> )
	</insert>
	
	<!-- 批量添加 适用于主键自增类型  不支持返回主键-->
	<insert id="batchInsert" parameterType="java.util.List" useGeneratedKeys="true">
		insert into course_remote_payoff( <include refid="table_columns" /> ) 
		values 
		<foreach item="item" collection="list" separator="," >
			( <include refid="entity_properties" /> )
		</foreach>
	</insert>
	
	<!--根据主键删除 -->
	<delete id="deleteById">
		delete from course_remote_payoff
		where id = #{id}
	</delete>
	
	<!-- 根据ID批量删除 -->
	<delete id="deleteByIds">
		delete from course_remote_payoff
		where id in
		<foreach item="item" collection="array" open="(" separator="," close=")">
			#{item}
		</foreach>
	</delete>
	
	<update id="update" parameterType="com.yuxin.wx.model.course.CourseRemotePayoff">
		update course_remote_payoff 
		<trim prefix="set" suffixOverrides=",">
			<if test="classTypeId != null and classTypeId != ''">class_type_id = #{classTypeId},</if>
			<if test="classTypeName != null and classTypeName != ''">class_type_name = #{classTypeName},</if>
			<if test="examTermId != null and examTermId != ''">exam_term_id = #{examTermId},</if>
			<if test="examTermName != null and examTermName != ''">exam_term_name = #{exam_term_name},</if>
			<if test="payoffDate != null and payoffDate != ''">payoff_date = #{payoffDate},</if>
			<if test="payoffFee != null and payoffFee != ''">payoff_fee = #{payoffFee},</if>
			<if test="payoffStatus != null and payoffStatus != ''">payoff_status = #{payoff_status},</if>
			<if test="payoffPercent != null and payoffPercent != ''">payoff_percent = #{payoffPercent},</if>
			<if test="createTime != null and createTime != ''">create_time = #{createTime},</if>
			<if test="creator != null and creator != ''">creator = #{creator},</if>
			<if test="updateTime != null and updateTime != ''">update_time = #{updateTime},</if>
			<if test="updator != null and updator != ''">updator = #{updator}</if>
		</trim>
		<where>id = #{id}</where>
	</update>
	<update id="updateByClassType" parameterType="com.yuxin.wx.model.course.CourseRemotePayoff">
		update course_remote_payoff 
		<trim prefix="set" suffixOverrides=",">
			<if test="classTypeId != null and classTypeId != ''">class_type_id = #{classTypeId},</if>
			<if test="classTypeName != null and classTypeName != ''">class_type_name = #{classTypeName},</if>
			<if test="examTermId != null and examTermId != ''">exam_term_id = #{examTermId},</if>
			<if test="examTermName != null and examTermName != ''">exam_term_name = #{exam_term_name},</if>
			<if test="payoffDate != null and payoffDate != ''">payoff_date = #{payoffDate},</if>
			<if test="payoffFee != null and payoffFee != ''">payoff_fee = #{payoffFee},</if>
			<if test="payoffStatus != null and payoffStatus != ''">payoff_status = #{payoff_status},</if>
			<if test="payoffPercent != null and payoffPercent != ''">payoff_percent = #{payoffPercent},</if>
			<if test="createTime != null and createTime != ''">create_time = #{createTime},</if>
			<if test="creator != null and creator != ''">creator = #{creator},</if>
			<if test="updateTime != null and updateTime != ''">update_time = #{updateTime},</if>
			<if test="updator != null and updator != ''">updator = #{updator}</if>
		</trim>
		<where>class_type_id = #{classTypeId} and exam_term_id=#{examTermId}</where>
	</update>
	
	<select id="findById" resultMap="courseRemotePayoffResultMap" parameterType="String" >
		select <include refid="table_columns" />
		from course_remote_payoff
		where id = #{id}
	</select>
	
	<select id="findListByClassType" resultMap="courseRemotePayoffResultMap" parameterType="String" >
		select <include refid="table_columns" />
		from course_remote_payoff
		where  class_type_id = #{classTypeId} and exam_term_id = #{examTermId}
	</select>
	
	<select id="queryAll" resultMap="courseRemotePayoffResultMap">
		select <include refid="table_columns" /> 
		from course_remote_payoff
	</select>
	
	<!-- 其他自定义SQL -->
	
	
</mapper>