<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yuxin.wx.queAns.mapper.QuestionAnswerMapper">
	<resultMap type="com.yuxin.wx.model.queAns.QuestionAnswer" id="questionAnswerResultMap">
		<result property="id" column="id" />
		<result property="answerDesc" column="answer_desc" />
		<result property="answerId" column="answer_id" />
		<result property="questionId" column="question_id" />
		<result property="userId" column="user_id" />
		<result property="answerType" column="answer_type" />
		<result property="answerLevel" column="answer_level" />
		<result property="commentCount" column="comment_count" />
		<result property="createTime" column="create_time" />
		<result property="delFlag" column="del_flag" />
		<result property="parentId" column="parent_id" />
		<result property="replyUserId" column="reply_user_id" />
		<result property="replyUserName" column="reply_user_name" />
		<result property="readFlag" column="read_flag" />
		<result property="replyUserType" column="reply_user_type" />
		<result property="likeanswer" column="like_answer" />
		<result property="isAdopt" column="is_accept" />
		<result property="isThumbs" column="is_thumbs" />
		<result property="adoptFlag" column="adopt_flag" />
		<result property="questionscore" column="question_score" />
		<result property="isChecke" column="is_checke" />
	</resultMap>

	
	<sql id="table_columns">
		id,
		answer_desc,
		answer_id,
		question_id,
		user_id,
		answer_type,
		answer_level,
		comment_count,
		create_time,
		del_flag,
		parent_id,
		reply_user_id,
		reply_user_name,
		read_flag,
		reply_user_type,
		is_accept,
		like_answer,
		is_checke
    </sql>
	<sql id="table_columns_app">
		t1.id as id,
		t1.answer_desc as answer_desc,
		t1.answer_id as answer_id,
		t1.question_id as question_id,
		t1.user_id as user_id,
		t1.answer_type as answer_type,
		t1.answer_level as answer_level,
		t1.comment_count as comment_count,
		t1.create_time as create_time,
		t1.del_flag as del_flag,
		t1.parent_id as parent_id,
		t1.reply_user_id as reply_user_id,
		t1.reply_user_name as reply_user_name,
		t1.read_flag AS read_flag,
		t1.reply_user_type as reply_user_type,
		t1.is_accept as is_accept,
		t1.like_answer as like_answer,
		t1.is_checke as is_checke,
		t3.adopt_flag as adopt_flag
    </sql>
	<sql id="entity_properties">
		#{id},
		#{answerDesc},
		#{answerId},
		#{questionId},
		#{userId},
		#{answerType},
		#{answerLevel},
		#{commentCount},
		#{createTime},
		#{delFlag},
		#{parentId},
		#{replyUserId},
		#{replyUserName},
		#{readFlag},
		#{replyUserType},
		#{isAdopt},
		#{likeanswer},
		#{isChecke}
	</sql>
	<sql id="batch_entity_properties">
		#{item.id},
		#{item.answerDesc},
		#{item.answerId},
		#{item.questionId},
		#{item.userId},
		#{item.answerType},
		#{item.answerLevel},
		#{item.commentCount},
		#{item.createTime},
		#{item.delFlag},
		#{item.parentId},
		#{item.replyUserId},
		#{item.replyUserName},
		#{item.readFlag},
		#{item.replyUserType},
		#{item.isAdopt},
		#{item.likeanswer},
		#{item.isChecke}
		
	</sql>
	
	<!-- 适用于主键自增类型 -->
	<insert id="insert" parameterType="com.yuxin.wx.model.queAns.QuestionAnswer" useGeneratedKeys="true" keyProperty="id">
		insert into question_answer_app( <include refid="table_columns" /> ) 
		values ( <include refid="entity_properties" /> )
	</insert>
	
	<!-- 批量添加 适用于主键自增类型  不支持返回主键-->
	<insert id="batchInsert" parameterType="java.util.List" useGeneratedKeys="true">
		insert into question_answer_app( <include refid="table_columns" /> ) 
		values 
		<foreach item="item" collection="list" separator="," >
			( <include refid="entity_properties" /> )
		</foreach>
	</insert>
	
	<!--根据主键删除 -->
	<delete id="deleteById">
		delete from question_answer_app
		where id = #{id}
	</delete>
	
	<!-- 根据ID批量删除 -->
	<delete id="deleteByIds">
		delete from question_answer_app
		where id in
		<foreach item="item" collection="array" open="(" separator="," close=")">
			#{item}
		</foreach>
	</delete>
	
	<update id="update" parameterType="com.yuxin.wx.model.queAns.QuestionAnswer">
		update question_answer_app 
		<trim prefix="set" suffixOverrides=",">
			<if test="answerDesc != null and answerDesc != ''">answer_desc = #{answerDesc},</if>
			<if test="answerId != null and answerId != ''">answer_id = #{answerId},</if>
			<if test="questionId != null and questionId != ''">question_id = #{questionId},</if>
			<if test="userId != null and userId != ''">user_id = #{userId},</if>
			<if test="answerType != null and answerType != ''">answer_type = #{answerType},</if>
			<if test="answerLevel != null and answerLevel != ''">answer_level = #{answerLevel},</if>
			<if test="commentCount != null ">comment_count = #{commentCount},</if>
			<if test="createTime != null and createTime != ''">create_time = #{createTime},</if>
			<if test="delFlag != null">del_flag = #{delFlag},</if>
			<if test="parentId != null">parent_id = #{parentId},</if>
			<if test="replyUserId != null">reply_user_id = #{replyUserId},</if>
			<if test="replyUserName != null and replyUserName != ''">reply_user_name = #{replyUserName},</if>
			<if test="readFlag != null">read_flag = #{readFlag},</if>
			<if test="replyUserType != null and replyUserType != ''">reply_user_type = #{replyUserType},</if>
			<if test="isAdopt != null and isAdopt != ''">is_accept = #{isAdopt},</if>
			<if test="isThumbs != null and isThumbs != ''">like_answer = #{isThumbs},</if>
			<if test="isChecke != null and isChecke != ''">is_checke = #{isChecke},</if>
		</trim>
		<where>id = #{id}</where>
	</update>
	
	<select id="findById" resultMap="questionAnswerResultMap" parameterType="String" >
		select <include refid="table_columns" />
		from question_answer_app
		where id = #{id}
	</select>
	
	<select id="queryAll" resultMap="questionAnswerResultMap">
		select <include refid="table_columns" /> 
		from question_answer_app
	</select>
	
	<!-- 使用like用法：columnName like concat('%',#columnName#,'%') -->
	<sql id="page_where">
		<trim prefix="where" prefixOverrides="and | or ">
			<if test="answerDesc != null and answerDesc != ''">and answer_desc = #{answerDesc}</if>
			<if test="answerId != null and answerId != ''">and answer_id = #{answerId}</if>
			<if test="questionId != null and questionId != ''">and question_id = #{questionId}</if>
			<if test="userId != null and userId != ''">and user_id = #{userId}</if>
			<if test="answerType != null and answerType != ''">and answer_type = #{answerType}</if>
			<if test="answerLevel != null and answerLevel != ''">and answer_level = #{answerLevel}</if>
			<if test="commentCount != null and commentCount != ''">and comment_count = #{commentCount}</if>
			<if test="createTime != null and createTime != ''">and create_time = #{createTime}</if>
			<if test="delFlag != null and delFlag != ''">and del_flag = #{delFlag}</if>
			<if test="parentId != null">and parent_id = #{parentId}</if>
			<if test="replyUserId != null">and reply_user_id = #{replyUserId}</if>
			<if test="replyUserName != null and replyUserName != ''">and reply_user_name = #{replyUserName}</if>
			<if test="readFlag != null">and read_flag = #{readFlag}</if>
			<if test="replyUserType != null and replyUserType != ''">and reply_user_type = #{replyUserType}</if>
		</trim>
	</sql>
	
	<select id="page" resultMap="questionAnswerResultMap" parameterType="com.yuxin.wx.model.queAns.QuestionAnswer">
		select <include refid="table_columns" />
		from question_answer_app
		<include refid="page_where" />
		limit #{firstIndex},#{pageSize}
	</select>
	
	<select id="pageCount" resultType="int" parameterType="com.yuxin.wx.model.queAns.QuestionAnswer">
		select count(id) from question_answer_app
		<include refid="page_where" />
	</select>
	
	
	<!-- 其他自定义SQL -->
	<!-- 根据问题id和分级下旬回复 -->
	<select id="findAnsByQueId" parameterType="com.yuxin.wx.model.queAns.QuestionAnswer" resultMap="questionAnswerResultMap">
		select t3.question_score as question_score,t2.is_thumbs as is_thumbs,<include refid="table_columns_app"/>
		from question_answer_app  t1
		left join thumbs_up t2 on t1.id = t2.answer_id and t2.user_id=#{userId}
			LEFT JOIN question_app t3 ON t3.id=t1.question_id
		where t1.question_id = #{questionId}
            and  t1.answer_level = 1
            and t1.del_flag = 1
		order by t1.create_time asc
		limit #{firstIndex},#{pageSize}
	</select>
	<select id="findAnsCountByQueId" parameterType="Integer" resultType="Integer" >
		select count(id)
		from question_answer_app
		where question_id = #{questionId} and 
			answer_level = 1 and 
			del_flag = 1
	</select>
	
	<select id="searchTotalScore"  parameterType="com.yuxin.wx.model.integral.TotalScoreVo" resultType="String">
		select id
		from total_score
		where user_id = #{userId} 
	</select>
	
	<select id="findTwoAns" parameterType="Integer" resultType="Integer">
		select id from question_answer_app
		where answer_id = #{answerId} and del_flag = 1
	</select>
	
	<select id="findEntityTwoAns" parameterType="com.yuxin.wx.model.queAns.QuestionAnswer" resultMap="questionAnswerResultMap">
		select t3.question_score as question_score,t2.is_thumbs as is_thumbs,<include refid="table_columns_app"/> 
		from question_answer_app t1
		left join thumbs_up t2 on t1.id = t2.answer_id and t2.user_id= #{userId}
		LEFT JOIN question_app t3 ON t3.id=t1.question_id
		where t1.answer_id = #{answerId} and 
			t1.del_flag = 1
		order by t1.create_time asc
	</select>
	
	<!-- 批量修改 -->
	<update id="updateList" parameterType="List">
		update question_answer_app
		set del_flag = 0
		where id in <foreach collection="list" item="item" open="(" separator="," close=")">
				#{item}
			</foreach>
	</update>
	<!--点赞操作-->
	<update id="updatQuestionAnswer" parameterType="com.yuxin.wx.model.queAns.QuestionAnswer">
		update question_answer_app set like_answer=like_answer+1 where id=#{id}
	</update>
	
	<update id="updatQuestionAnswer1" parameterType="com.yuxin.wx.model.queAns.QuestionAnswer">
		update question_answer_app set like_answer=like_answer-1 where id=#{id}
	</update>
	<insert id="insertThumbs" parameterType="com.yuxin.wx.model.queAns.QuestionAnswer" useGeneratedKeys="true" keyProperty="id">
		insert into thumbs_up (answer_id,user_id,is_thumbs) 
		values ( #{id} ,#{userId} ,1 )
	</insert>
	
	<!-- 适用于主键自增类型 -->
	<insert id="insertScoreDetailsApp" parameterType="com.yuxin.wx.model.integral.ScoreDetailsAppVo" useGeneratedKeys="true" keyProperty="id">
		insert into score_details_app (item_score,origin,create_time,total_score_id,reduce_add_flag) 
		values ( #{itemScore} ,#{origin} ,now(), #{totalScoreId}, #{reduceAddFlag})
	</insert>
	<!-- 适用于主键自增类型 -->
	<insert id="inserTotalScore" parameterType="com.yuxin.wx.model.integral.TotalScoreVo" useGeneratedKeys="true" keyProperty="id">
		<selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
			SELECT @@IDENTITY
		</selectKey>
		insert into total_score (user_id,create_time,total_score) 
		values ( #{userId} ,now(),#{totalScore})
	</insert>
	<update id="updatethumbs" parameterType="com.yuxin.wx.model.queAns.QuestionAnswer">
		update thumbs_up set is_thumbs=#{isThumbs} where answer_id=#{id} and user_id=#{userId}
	</update>
	<update id="updateTotalScore" parameterType="com.yuxin.wx.model.integral.TotalScoreVo">
		update total_score set total_score=(CASE when total_score is null then #{totalScore} else total_score+#{totalScore} end),update_time=now() where  user_id=#{userId}
	</update>
	<update id="updateQuestionAdoptFlag" parameterType="com.yuxin.wx.model.queAns.QueQuestion">
		update question_app  set adopt_flag=(CASE when adopt_flag is null then 1 else adopt_flag+1 end) where id=#{id} 
	</update>
	<update id="updateAnswerAccept" parameterType="com.yuxin.wx.model.queAns.QuestionAnswer">
		update question_answer_app  set is_accept=1 where id=#{id} 
	</update>
</mapper>